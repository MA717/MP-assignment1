// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "10/29/2020 20:57:42"

// 
// Device: Altera 5M40ZE64C4 Package EQFP64
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Register (
	Q1,
	CLR,
	Clk,
	D1,
	PRN,
	Q2,
	D2,
	Q3,
	D3,
	Q4,
	D4);
output 	Q1;
input 	CLR;
input 	Clk;
input 	D1;
input 	PRN;
output 	Q2;
input 	D2;
output 	Q3;
input 	D3;
output 	Q4;
input 	D4;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Clk~combout ;
wire \D1~combout ;
wire \CLR~combout ;
wire \PRN~combout ;
wire \inst~regout ;
wire \D2~combout ;
wire \inst2~regout ;
wire \D3~combout ;
wire \inst3~regout ;
wire \D4~combout ;
wire \inst4~regout ;


// Location: PIN_9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \Clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\Clk~combout ),
	.padio(Clk));
// synopsys translate_off
defparam \Clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \D1~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\D1~combout ),
	.padio(D1));
// synopsys translate_off
defparam \D1~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \CLR~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\CLR~combout ),
	.padio(CLR));
// synopsys translate_off
defparam \CLR~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \PRN~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\PRN~combout ),
	.padio(PRN));
// synopsys translate_off
defparam \PRN~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N2
maxv_lcell inst(
// Equation(s):
// \inst~regout  = DFFEAS((\D1~combout ), GLOBAL(\Clk~combout ), GLOBAL(\CLR~combout ), , , VCC, !GLOBAL(\PRN~combout ), , )

	.clk(\Clk~combout ),
	.dataa(\D1~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\CLR~combout ),
	.aload(!\PRN~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst.lut_mask = "aaaa";
defparam inst.operation_mode = "normal";
defparam inst.output_mode = "reg_only";
defparam inst.register_cascade_mode = "off";
defparam inst.sum_lutc_input = "datac";
defparam inst.synch_mode = "off";
// synopsys translate_on

// Location: PIN_10,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \D2~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\D2~combout ),
	.padio(D2));
// synopsys translate_off
defparam \D2~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X6_Y2_N2
maxv_lcell inst2(
// Equation(s):
// \inst2~regout  = DFFEAS((((\D2~combout ))), GLOBAL(\Clk~combout ), GLOBAL(\CLR~combout ), , , VCC, !GLOBAL(\PRN~combout ), , )

	.clk(\Clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\D2~combout ),
	.aclr(!\CLR~combout ),
	.aload(!\PRN~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst2.lut_mask = "ff00";
defparam inst2.operation_mode = "normal";
defparam inst2.output_mode = "reg_only";
defparam inst2.register_cascade_mode = "off";
defparam inst2.sum_lutc_input = "datac";
defparam inst2.synch_mode = "off";
// synopsys translate_on

// Location: PIN_11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \D3~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\D3~combout ),
	.padio(D3));
// synopsys translate_off
defparam \D3~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y2_N2
maxv_lcell inst3(
// Equation(s):
// \inst3~regout  = DFFEAS(((\D3~combout )), GLOBAL(\Clk~combout ), GLOBAL(\CLR~combout ), , , VCC, !GLOBAL(\PRN~combout ), , )

	.clk(\Clk~combout ),
	.dataa(vcc),
	.datab(\D3~combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\CLR~combout ),
	.aload(!\PRN~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst3~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst3.lut_mask = "cccc";
defparam inst3.operation_mode = "normal";
defparam inst3.output_mode = "reg_only";
defparam inst3.register_cascade_mode = "off";
defparam inst3.sum_lutc_input = "datac";
defparam inst3.synch_mode = "off";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \D4~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\D4~combout ),
	.padio(D4));
// synopsys translate_off
defparam \D4~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y3_N2
maxv_lcell inst4(
// Equation(s):
// \inst4~regout  = DFFEAS((((\D4~combout ))), GLOBAL(\Clk~combout ), GLOBAL(\CLR~combout ), , , VCC, !GLOBAL(\PRN~combout ), , )

	.clk(\Clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\D4~combout ),
	.aclr(!\CLR~combout ),
	.aload(!\PRN~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst4~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst4.lut_mask = "ff00";
defparam inst4.operation_mode = "normal";
defparam inst4.output_mode = "reg_only";
defparam inst4.register_cascade_mode = "off";
defparam inst4.sum_lutc_input = "datac";
defparam inst4.synch_mode = "off";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \Q1~I (
	.datain(\inst~regout ),
	.oe(vcc),
	.combout(),
	.padio(Q1));
// synopsys translate_off
defparam \Q1~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \Q2~I (
	.datain(\inst2~regout ),
	.oe(vcc),
	.combout(),
	.padio(Q2));
// synopsys translate_off
defparam \Q2~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \Q3~I (
	.datain(\inst3~regout ),
	.oe(vcc),
	.combout(),
	.padio(Q3));
// synopsys translate_off
defparam \Q3~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \Q4~I (
	.datain(\inst4~regout ),
	.oe(vcc),
	.combout(),
	.padio(Q4));
// synopsys translate_off
defparam \Q4~I .operation_mode = "output";
// synopsys translate_on

endmodule
